package AnalizadoresLexicoSintactico;
import java_cup.runtime.*;
import Instrucciones.ArbolSintactico;

parser code 
{:
        
        public void syntax_error(Symbol s){
            System.out.println("Error Sintactico: "+s.value+" , Linea: "+s.left+" Columna: "+s.right);
        }
        public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
            System.out.println("Error SintActico unrecovered: "+s.value+" , linea: "+s.left+" columna: "+s.right);
        }
:}

terminal VAR, TIPO_VARIABLE, END;

terminal MENOS, DOS_PUNTOS, MENOR_QUE, PUNTO_COMA, IGUAL, MAYOR_QUE, ARROBA, CORCHETE_IZQUIERDO, CORCHETE_DERECHO;
terminal PARENTESIS_IZQUIERDO, PARENTESIS_DERECHO, COMA;

terminal EXEC, TIPO_PRINT, CONSOLE, GRAPHBAR, GRAPHPIE, GRAPHLINE, HISTOGRAM;
terminal CADENA, ENTERO, DECIMAL , EXPRESION, EXPRESION_ARRAY, ARRAY, PROGRAM, END_PROGRAM, ARITMETICA, ESTADISTICA;
terminal EJEX, EJEY, LABEL, TITULO, VALUES, TITULOX, TITULOY;

//------------------------------------------------------------------------------
non terminal ArbolSintactico inicio, declaraciones, declaracion;

non terminal ArbolSintactico Valores, valor_variable, contenido_array, lista_array;

//------------------------------------------------------------------------------
start with inicio;

inicio ::= PROGRAM:program declaraciones:sentencias END_PROGRAM:end_program

{:
    ArbolSintactico inicio = new ArbolSintactico("Inicio");
    inicio.AgregarHijo(new ArbolSintactico(program.toString()));
    inicio.AgregarHijo(sentencias);
    inicio.AgregarHijo(new ArbolSintactico(end_program.toString()));
    RESULT = inicio;   
:};

declaraciones ::= declaraciones:sentencias declaracion:sentencia 
{:
    ArbolSintactico declaraciones = new ArbolSintactico("Declaracion");
    declaraciones.AgregarHijo(sentencias);
    declaraciones.AgregarHijo(sentencia);
    RESULT = declaraciones;
    
:}
                | declaracion:sentencia 

{:
    ArbolSintactico declaraciones = new ArbolSintactico("Declaracion");
    declaraciones.AgregarHijo(sentencia);
    RESULT = declaraciones;
    
:};

//------------------------------------------------------------------------------
valor_variable ::=    ENTERO:valor1
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(valor1.toString()));
    RESULT = valor;
:}
                    | DECIMAL:valor1  
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(valor1.toString()));
    RESULT = valor;
:}
                    | CADENA:valor1 
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(valor1.toString()));
    RESULT = valor;
:}
                    | EXPRESION:valor1
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(valor1.toString()));
    RESULT = valor;
:}

                   | EXPRESION_ARRAY:valor1
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(valor1.toString()));
    RESULT = valor;
:}

                    | ARITMETICA:aritmetica PARENTESIS_IZQUIERDO:parentesis_izquierdo valor_variable:valor1 COMA:coma valor_variable:valor2 PARENTESIS_DERECHO:parentesis_derecho
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(aritmetica.toString()));
    valor.AgregarHijo(new ArbolSintactico(parentesis_izquierdo.toString()));
    valor.AgregarHijo(valor1);
    valor.AgregarHijo(new ArbolSintactico(coma.toString()));
    valor.AgregarHijo(valor2);
    valor.AgregarHijo(new ArbolSintactico(parentesis_derecho.toString()));
    RESULT = valor;
:}

                    | ESTADISTICA:estadistica PARENTESIS_IZQUIERDO:parentesis_izquierdo contenido_array:contenido PARENTESIS_DERECHO:parentesis_derecho
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(estadistica.toString()));
    valor.AgregarHijo(new ArbolSintactico(parentesis_izquierdo.toString()));
    valor.AgregarHijo(contenido);
    valor.AgregarHijo(new ArbolSintactico(parentesis_derecho.toString()));
    RESULT = valor;
:}


                   | ESTADISTICA:estadistica PARENTESIS_IZQUIERDO:parentesis_izquierdo valor_variable:valor2 PARENTESIS_DERECHO:parentesis_derecho
{:
    ArbolSintactico valor = new ArbolSintactico("valor Variable");
    valor.AgregarHijo(new ArbolSintactico(estadistica.toString()));
    valor.AgregarHijo(valor2);
    RESULT = valor;
:}

;
//------------------------------------------------------------------------------
declaracion ::= VAR:var DOS_PUNTOS:dos_puntos1 TIPO_VARIABLE:tipo_variable DOS_PUNTOS:dos_puntos2 DOS_PUNTOS:dos_puntos3 EXPRESION:expresion MENOR_QUE:menor_que MENOS:menos valor_variable:valor END:end PUNTO_COMA:punto_coma
{:
    ArbolSintactico declaracion = new ArbolSintactico("Declaracion Variable");
    declaracion.AgregarHijo(new ArbolSintactico(var.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos1.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(tipo_variable.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos2.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos3.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(expresion.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(menor_que.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(menos.toString()));
    declaracion.AgregarHijo(valor);
    declaracion.AgregarHijo(new ArbolSintactico(end.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(punto_coma.toString()));
    RESULT = declaracion; 
:};

//------------------------------------------------------------------------------
declaracion ::= ARRAY:array DOS_PUNTOS:dos_puntos1 TIPO_VARIABLE:tipo_variable DOS_PUNTOS:dos_puntos2 DOS_PUNTOS:dos_puntos3 EXPRESION_ARRAY:expresion_array MENOR_QUE:menor_que MENOS:menos contenido_array:contenido END:end PUNTO_COMA:punto_coma
{:
    ArbolSintactico declaracion = new ArbolSintactico("Declaracion Arreglo");
    declaracion.AgregarHijo(new ArbolSintactico(array.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos1.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(tipo_variable.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos2.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(dos_puntos3.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(expresion_array.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(menor_que.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(menos.toString()));
    declaracion.AgregarHijo(contenido);
    declaracion.AgregarHijo(new ArbolSintactico(end.toString()));
    declaracion.AgregarHijo(new ArbolSintactico(punto_coma.toString()));
    RESULT = declaracion;
:}
;

contenido_array ::= CORCHETE_IZQUIERDO:corchete_izquierdo lista_array:lista CORCHETE_DERECHO:corchete_derecho
{:
    ArbolSintactico contenido_array = new ArbolSintactico("Contenido Array");
    contenido_array.AgregarHijo(new ArbolSintactico(corchete_izquierdo.toString()));
    contenido_array.AgregarHijo(lista);
    contenido_array.AgregarHijo(new ArbolSintactico(corchete_derecho.toString()));
    RESULT = contenido_array;
    
:};

lista_array ::= lista_array:lista COMA:coma valor_variable:valor_var 
{:
    ArbolSintactico lista_array = new ArbolSintactico("Lista Array");
    lista_array.AgregarHijo(lista);
    lista_array.AgregarHijo(new ArbolSintactico(coma.toString()));
    lista_array.AgregarHijo(valor_var);
    RESULT = lista_array;
:}
        | valor_variable:valor1
{:
    ArbolSintactico valor = new ArbolSintactico("Lista Array");
    valor.AgregarHijo(valor1);
    RESULT = valor;   
:}
;

//------------------------------------------------------------------------------

